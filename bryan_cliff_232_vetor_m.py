# -*- coding: utf-8 -*-
"""Bryan Cliff - 232_Vetor_m.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10WEvC4qO4ZZrxh-q70D0TVN6gUxPb8uH

#**EXERCÍCIOS SOBRE VETOR**

### 1. Faça um programa que calcule e apresente a média de idades de uma sala de 35 alunos.​​
"""

idades = []
soma_idades = 0
for i in range(5):       # i significa indice
    idades.append(int(input('Digite aqui a idade: ')))
    soma_idades = soma_idades + idades[i]
print(idades)

qtde_pessoas = 0
for i in range(len(idades)):
    print('Elemento:', idades[i],', Índice: ',i) #pega o elemento do vetor idade [i] e mostre o indice no i
    print(idades[i])
    if idades[i] > 20:
        qtde_pessoas = qtde_pessoas + 1
print(f'quantas pessoas > 20 anos é: {qtde_pessoas}')
print(f'quantidade de elementos: {len(idades)}')

"""### 2. Faça um programa que calcule e apresente a média de alturas de uma sala de 35 alunos. Informe também quantos alunos **e** quais (índice/posição) são os que possuem idade superior a 25 anos.​ Use dois vetores, um para altura e outro para idade. Não use nenhuma função pronta da linguagem Python, a não ser len() e append().

"""

alturas = []
idades = []

for i in range(6):
    altura = float(input(f"Informe a altura do aluno {i + 1}: "))
    alturas.append(altura)

    idade = int(input(f"Informe a idade do aluno {i + 1}: "))
    idades.append(idade)

soma_alturas = 0
for altura in alturas:
    soma_alturas += altura

media_alturas = soma_alturas / len(alturas)
print(f"A média das alturas da sala é: {media_alturas:.2f}")

contador_idade_superior_25 = 0
indices_idade_superior_25 = []

for i in range(len(idades)):
    if idades[i] > 25:
        contador_idade_superior_25 += 1
        indices_idade_superior_25.append(i + 1)

print(f"Quantidade de alunos com idade superior a 25 anos: {contador_idade_superior_25}")
if contador_idade_superior_25 > 0:
    print("Alunos com idade superior a 25 anos - Índices/Posições:", end=" ")
    for index in indices_idade_superior_25:
        print(index, end=" ")
    print()

"""### 3. Faça um programa que carregue um vetor de dez elementos que contenha o nome de pessoas e outro que contenha o peso, encontre qual a pessoa mais gorda e mais magra e apresente o nome o peso das mesmas.​ Use dois vetores, um para peso e outro para nome. Não use nenhuma função pronta da linguagem Python, a não ser len() e append()."""

nomes = []
pesos = []
for i in range(4):
    nomes.append(input('Informe o nome: '))
    pesos.append(float(input('Informe o peso: ')))
for i in range(len(nomes)):
    if i == 0: # inicialização das variáveis
        gordo = pesos[i] # [] como se estivesse armazenando um valor em uma caixinha
        nome_gordo = nomes[i]
        magro = pesos[i]
        nome_magro = nomes[i]
    if pesos[i] >= gordo:
        gordo = pesos[i]
        nome_gordo = nomes[i]
    if pesos[i] <= magro:
        magro = pesos[i]
        nome_magro = nomes[i]
print(f'{nome_gordo} é mais pesado, com {gordo} Kg')
print(f'{nome_magro} é menos pesado, com {magro} Kg')

"""### 4. Faça um programa que carregue um vetor com a média de dez alunos, calcule e mostre a MÉDIA DA SALA e quantos alunos estão acima e abaixo da média da sala. Não use nenhuma função pronta da linguagem Python, a não ser len() e append()."""

#Codigo abaixo para tirar a média de 10 alunos, mostrar separadamente sua respectiva nota e se esta acima ou abaixo da media da sala.


media = []
media_sala = 0
for i in range (10):      # range = quantidade que pede para ser repetido
    media.append(float(input('Digite a media do aluno: ')))
    media_sala = media_sala + media[i]
media_sala = media_sala / 10
print(f'A media da sala e {media_sala}')
acima_media = 0
abaixo_media = 0
for i in range (len(media)):  # (len) ira ler o conteudo do vetor
    if media[i] < media_sala:
        print(f'A nota do aluno é {media[i]}, portanto ele está abaixo da média da sala.')
    if media[i] > media_sala:
        print(f'A nota do aluno é {media[i]}, portanto ele está acima da média da sala.')

#CODIGO ABAIXO DO EXERCÍCIO 4


media = []
media_sala = 0

for i in range (10):      # range = quantidade que pede para ser repetido
    media.append(float(input('Digite a media do aluno: ')))
    media_sala = media_sala + media[i]
media_sala = media_sala / 10
print(f'A media da sala é {media_sala}')

acima_media = 0
abaixo_media = 0

for i in range (len(media)):  # (len) ira ler o conteudo do vetor
    if media[i] < media_sala:
        acima_media = acima_media + 1
print(f'{acima_media} alunos estão abaixo da média da sala.')

for i in range (len(media)):
    if media[i] > media_sala:
        abaixo_media = abaixo_media + 1
print(f'{abaixo_media} alunos estão acima da média da sala.')

"""### 5. Faça um programa que carregue um vetor de oito elementos numéricos inteiros, calcule e mostre os números pares e suas respectivas índices/posições. Não use nenhuma função pronta da linguagem Python, a não ser len() e append().

"""

# Digite seu código aqui.
vetor = []
for i in range(8):
    vetor.append(int(input("Digite a seguir o número: ")))

for i in range(8):
    if vetor[i] %2 == 0:
     print(f"Os números pares são: {vetor [i]} no indice {[i]}")

"""### 6. Faça um programa que carregue um vetor com dez nomes e faça uma verificação se um determinado nome esta nesse vetor. Não use nenhuma função pronta da linguagem Python, a não ser len() e append()."""

vet_nome = []
#o primeiro for é para cadastrar valores no vetor
for i in range(4):
    vet_nome.append(input('Digite o nome: '))
print(vet_nome)

#um novo for para pesquisar
nome_pesquisar = input('Qual nome deseja pesquisar ')
contador = 0
for i in range(len(vet_nome)):
    if nome_pesquisar == vet_nome[i]:
        contador = contador + 1
        print('Aluno encontrado!')
        break #parar quando achar o aluno
if contador == 0:
        print('Aluno não encontrado!')

"""### 7. Faça um algoritmo que calcule e apresente a média de alturas superior a 1,80 de 10 alunos. Informe também quantos e quais (índice/posição) são os alunos. Não use nenhuma função pronta da linguagem Python, a não ser len() e append().

"""

#in = contido em...    #append = colocar um novo valor no final da lista       #range = número de vezes que ira repetir
                                                                                     #len = quantidade de elementos dentro do vetor
vet_altura = []
#o primeiro for é para cadastrar valores no vetor
for i in range(4):
    vet_altura.append(float(input('Digite a altura: ')))
print(vet_altura)

soma_alturas = 0
contador = 0
for i in range(len(vet_altura)):
    if vet_altura[i] > 1.8:
        soma_alturas = soma_alturas + vet_altura[i]
        contador = contador + 1
        print('O aluno nº',i,'tem',vet_altura[i],'metros')

if contador > 0:
    print('Média de alturas', soma_alturas/contador,'metros')
else:
    print('Não há alunos com altura maior que 1.8 metros')

"""### 8. Criar um algoritmo que a partir de um vetor de 10 elementos inteiros, crie outros dois vetores que receberão os elementos positivos e negativos e ao final apresente-os. Não use nenhuma função pronta da linguagem Python, a não ser len() e append().

"""

#appende = quando for incerir novos valores a um vetor

#i = 0      inicialização do contador/índice
# while i < 5:        condição de parada
numero = []
positivo = []
negativo = []
i = 0 #inicialização do contador/índice
while i < 5: # condição de parada
    numero.append(int(input('Digite o número: ')))
    if numero[i] > 0:
        positivo.append(numero[i])
    else:
        negativo.append(numero[i])
    i = i + 1 #incremento do contador/índice
print(numero)
print(positivo)
print(negativo)

print('\nApresentação dos valores positivos..............')
for i in range(len(positivo)):
    print('Índice:',i,'Elemento vetor positivo:',positivo[i])

print('\nApresentação dos valores negativos..............')
for i in range(len(negativo)):
    print('Índice:',i,'Elemento vetor positivo:',negativo[i])

# Digite seu código aqui

"""### 9. Criar um algoritmo que leia dados para um vetor de 100 elementos inteiros, imprimir o maior, o menor, o percentual de números pares e a média dos elementos do vetor. Obs.: percentual = quantidade contada * 100 / quantidade total. Não use nenhuma função pronta da linguagem Python, a não ser len() e append().

"""

# Digite seu código aqui.
# Inicializando o vetor
vetor = []

# Preenchendo o vetor com 100 elementos inteiros
for i in range(5):
    elemento = int(input(f"Informe o {i + 1}º número inteiro: "))
    vetor.append(elemento)

# Encontrando o maior e o menor número no vetor
maior = menor = vetor[0]
for elemento in vetor:
    if elemento > maior:
        maior = elemento
    if elemento < menor:
        menor = elemento

# Calculando o percentual de números pares
quantidade_pares = 0
for elemento in vetor:
    if elemento % 2 == 0:
        quantidade_pares += 1

percentual_pares = quantidade_pares * 100 / len(vetor)

# Calculando a média dos elementos do vetor
soma_elementos = sum(vetor)
media_elementos = soma_elementos / len(vetor)

# Exibindo os resultados
print(f"O maior número no vetor é: {maior}")
print(f"O menor número no vetor é: {menor}")
print(f"Percentual de números pares: {percentual_pares:.2f}%")
print(f"A média dos elementos do vetor é: {media_elementos:.2f}")

"""### 10. Faça um programa que:

* preencha um vetor com seis elementos numéricos inteiros.

**Calcule e mostre:**

* todos os números pares;
* a quantidade de números pares;
* todos os números ímpares;
* a quantidade de números ímpares

Não use nenhuma função pronta da linguagem Python, a não ser len() e append().
"""

vetor = []

for i in range(6):
    numero = int(input(f"Informe o {i + 1}º número inteiro: "))
    vetor.append(numero)

numeros_pares = []
numeros_impares = []

for elemento in vetor:
    if elemento % 2 == 0:
        numeros_pares.append(elemento)
    else:
        numeros_impares.append(elemento)

print("Todos os números pares:")
for numero in numeros_pares:
    print(numero, end=" ")
print()
quantidade_pares = len(numeros_pares)
print(f"A quantidade de números pares é: {quantidade_pares}")

print("\nTodos os números ímpares:")
for numero in numeros_impares:
    print(numero, end=" ")
print()
quantidade_impares = len(numeros_impares)
print(f"A quantidade de números ímpares é: {quantidade_impares}")

"""### 11. Faça um programa que:

* preencha um vetor com sete números inteiros

**Calcule e mostre:**

* os números múltiplos de 2;
* os números múltiplos de 3;
* os números múltiplos de 2 **e de** 3.

Não use nenhuma função pronta da linguagem Python, a não ser len() e append().
"""

# Digite seu código aqui.
# Inicializando o vetor
vetor = []

# Preenchendo o vetor com sete elementos numéricos inteiros
for i in range(7):
    numero = int(input(f"Informe o {i + 1}º número inteiro: "))
    vetor.append(numero)

# Inicializando listas para armazenar números múltiplos de 2, de 3 e de ambos
multiplos_de_2 = []
multiplos_de_3 = []
multiplos_de_2_e_3 = []

# Identificando os números múltiplos de 2, de 3 e de ambos
for elemento in vetor:
    if elemento % 2 == 0:
        multiplos_de_2.append(elemento)
    if elemento % 3 == 0:
        multiplos_de_3.append(elemento)
    if elemento % 2 == 0 and elemento % 3 == 0:
        multiplos_de_2_e_3.append(elemento)

# Mostrando os números múltiplos de 2
print("Números múltiplos de 2:")
for numero in multiplos_de_2:
    print(numero, end=" ")
print()

# Mostrando os números múltiplos de 3
print("\nNúmeros múltiplos de 3:")
for numero in multiplos_de_3:
    print(numero, end=" ")
print()

# Mostrando os números múltiplos de 2 e de 3
print("\nNúmeros múltiplos de 2 e de 3:")
for numero in multiplos_de_2_e_3:
    print(numero, end=" ")
print()

"""### 12. Faça um programa que:

* preencha um vetor com quinze elementos inteiros
* verifique a existência de elementos iguais a 30, mostrando os índices/posições em que apareceram.

Não use nenhuma função pronta da linguagem Python, a não ser len() e append().
"""

# Inicializando o vetor
vetor = []

# Preenchendo o vetor com quinze elementos numéricos inteiros
for i in range(15):
    numero = int(input(f"Informe o {i + 1}º número inteiro: "))
    vetor.append(numero)

# Verificando e mostrando os índices/posições em que o número 30 aparece
indices_iguais_30 = []
for i in range(len(vetor)):
    if vetor[i] == 30:
        indices_iguais_30.append(i)

if len(indices_iguais_30) > 0:
    print("Elemento igual a 30 encontrado nos índices/posições:", indices_iguais_30)
else:
    print("O elemento 30 não foi encontrado no vetor.")

"""### 13. Faça um programa que:

* preencha um vetor com dez números reais

**Calcule e mostre:**

* a quantidade de números negativos
* a soma dos números positivos desse *vetor*
* não use nenhuma função pronta da linguagem Python
"""

# Digite seu código aqui.
vetor = []

for i in range(5):
    vetor.append(int(input("Digite aqui o número:")))

negativo = 0
for i in range(len(vetor)):      #len vetor
    if vetor[i] < 0:
       negativo = negativo + 1                                   #[i] pegar posição
print(f'Existem {negativo} números negativos.')

soma = 0
for i in range(5):
    if vetor[i] > 0:
       soma = soma + vetor[i]
print(f'A soma dos números positivos é {soma}.')

"""### 14. Faça um programa que:

* receba dez números inteiros e armazene-os em um vetor
* classifique os números em dois vetores, um com números pares e o outra com os ímpares

Não use nenhuma função pronta da linguagem Python, a não ser len() e append().
"""

pessoas = 1
while pessoas <= 5:
    nome = input('Digite o nome: ')
    altura = float(input('Digite a altura: '))
    if pessoas == 1:
        alto = altura
        nome_alto = nome
        baixo = altura
        nome_baixo = nome
    if altura > alto:
        nome_alto = nome
        alto = altura
    if altura < baixo:
        nome_baixo = nome
        baixo +altura
    pessoas =pessoas + 1
print('Nome alto: ', nome_alto, 'Altura', alto, 'mt')
print('Nome baixo: ', nome_baixo, 'Altura', baixo, 'mt')

"""### 15. Faça um programa que:

* preencha um vetor com quinze números

**Determine e mostre:**

* o maior número e a posição por ele ocupada no vetor
* o menor número e a posição por ele ocupada no vetor

Não use nenhuma função pronta da linguagem Python, a não ser len() e append().
"""

vetor = []

for i in range(15):
    numero = float(input(f"Informe o {i + 1}º número: "))
    vetor.append(numero)

maior = menor = vetor[0]
posicao_maior = posicao_menor = 0

for i in range(len(vetor)):
    if vetor[i] > maior:
        maior = vetor[i]
        posicao_maior = i
    if vetor[i] < menor:
        menor = vetor[i]
        posicao_menor = i

print(f"O maior número é {maior} e está na posição {posicao_maior + 1} do vetor.")

print(f"O menor número é {menor} e está na posição {posicao_menor + 1} do vetor.")

"""### 16. Faça um programa que:

* preencha dois vetores com de dez numeros cada
* preencha um terceiro vetor com os números dos dois vetores anteriores ordenados em ordem crescente

"""

# Digite seu código aqui.
# Inicializando os dois vetores
vetor1 = []
vetor2 = []

# Preenchendo o primeiro vetor com dez elementos
print("Preencha o primeiro vetor com 10 números:")
for i in range(10):
    numero = float(input(f"Informe o {i + 1}º número para o primeiro vetor: "))
    vetor1.append(numero)

# Preenchendo o segundo vetor com dez elementos
print("\nPreencha o segundo vetor com 10 números:")
for i in range(10):
    numero = float(input(f"Informe o {i + 1}º número para o segundo vetor: "))
    vetor2.append(numero)

# Juntando os dois vetores e ordenando em ordem crescente
vetor_concatenado = vetor1 + vetor2
vetor_ordenado = []

# Ordenando o vetor_concatenado manualmente
while vetor_concatenado:
    minimo = vetor_concatenado[0]
    for num in vetor_concatenado:
        if num < minimo:
            minimo = num
    vetor_ordenado.append(minimo)
    vetor_concatenado.remove(minimo)

# Mostrando o terceiro vetor com os números ordenados
print("\nTerceiro vetor com os números dos dois vetores anteriores ordenados em ordem crescente:")
print(vetor_ordenado)

"""### 17. Faça um programa que:

* carregue dois vetores com 10 números cada
* faça a multiplicação dos números na mesma posição
* o resultado deverá ser adicionada em um terceiro vetor

Não use nenhuma função pronta da linguagem Python, a não ser len() e append().
"""

# Inicializando os dois vetores
vetor1 = []
vetor2 = []

# Preenchendo o primeiro vetor com dez elementos
print("Preencha o primeiro vetor com 10 números:")
for i in range(10):
    numero = float(input(f"Informe o {i + 1}º número para o primeiro vetor: "))
    vetor1.append(numero)

# Preenchendo o segundo vetor com dez elementos
print("\nPreencha o segundo vetor com 10 números:")
for i in range(10):
    numero = float(input(f"Informe o {i + 1}º número para o segundo vetor: "))
    vetor2.append(numero)

# Inicializando o terceiro vetor para armazenar os resultados da multiplicação
vetor_multiplicacao = []

# Multiplicando os números na mesma posição e armazenando os resultados no terceiro vetor
for i in range(len(vetor1)):
    resultado = vetor1[i] * vetor2[i]
    vetor_multiplicacao.append(resultado)

# Mostrando o terceiro vetor com os resultados da multiplicação
print("\nTerceiro vetor com os resultados da multiplicação:")
print(vetor_multiplicacao)

# Digite seu código aqui.

# a [ 8, 6, 3, 5]
# b [ 3, 2, 9, 2]
# c [8*3, 6*2,3*9, 5*2]
# c [24, 12, 27, 10]

"""### 18. Faça um programa que:

* leia um vetor de 10 números inteiros
* exiba na tela os números positivos e seus respectivos índices.

Não use nenhuma função pronta da linguagem Python, a não ser len() e append().
"""

# Digite seu código aqui.
# Inicializando o vetor
vetor = []

# Preenchendo o vetor com 10 números inteiros
for i in range(10):
    numero = int(input(f"Informe o {i + 1}º número inteiro: "))
    vetor.append(numero)

# Exibindo os números positivos e seus respectivos índices
print("Números positivos e seus índices:")
for i in range(len(vetor)):
    if vetor[i] > 0:
        print(f"Índice {i}: {vetor[i]}")

"""### 19. Faça um programa que:

* insira dez números inteiros em um vetor
* crie um segundo vetor, substituindo os números multiplos de 3 por "999""
* exiba os dois vetores

Não use nenhuma função pronta da linguagem Python, a não ser len() e append().
"""

#fazer até aqui, o 18 é o ultimo obrigatorio
# Inicializando o primeiro vetor
vetor_original = []

# Preenchendo o primeiro vetor com 10 números inteiros
for i in range(10):
    numero = int(input(f"Informe o {i + 1}º número inteiro: "))
    vetor_original.append(numero)

# Criando o segundo vetor com os números substituídos por "999" se forem múltiplos de 3
vetor_substituido = []
for elemento in vetor_original:
    if elemento % 3 == 0:
        vetor_substituido.append(999)
    else:
        vetor_substituido.append(elemento)

# Exibindo os dois vetores
print("\nPrimeiro vetor:")
print(vetor_original)

print("\nSegundo vetor com múltiplos de 3 substituídos por '999':")
print(vetor_substituido)

# Digite seu código aqui

"""### 20. Faça um programa que:

* leia dois vetores (A e B) com cinco posições para números inteiros.
* o programa deve, então, subtrair o primeiro elemento de A do último de B, armazenando o resultado num terceiro vetor, subtrair o segundo elemento de A do penúltimo de B, armazenando o resultado num terceiro vetor e assim por diante.
* ao final, mostre o resultado do terceiro vetor

O índice de um dos vetores terá que ser decrementado (slide 2 de Vetor) , ou seja, você implementara ele manualmente.

Não use nenhuma função pronta da linguagem Python, a não ser len() e append().
"""

# Inicializando os vetores A e B
vetor_A = []
vetor_B = []

# Preenchendo o vetor A com 5 números inteiros
print("Preencha o vetor A com 5 números inteiros:")
for i in range(5):
    numero = int(input(f"Informe o {i + 1}º número para o vetor A: "))
    vetor_A.append(numero)

# Preenchendo o vetor B com 5 números inteiros
print("\nPreencha o vetor B com 5 números inteiros:")
for i in range(5):
    numero = int(input(f"Informe o {i + 1}º número para o vetor B: "))
    vetor_B.append(numero)

# Inicializando o terceiro vetor para armazenar os resultados das subtrações
vetor_resultado = []

# Subtraindo os elementos e armazenando os resultados no terceiro vetor
for i in range(5):
    indice_B = 4 - i  # Decrementando o índice de B manualmente para fazer a subtração reversa
    resultado = vetor_A[i] - vetor_B[indice_B]
    vetor_resultado.append(resultado)

# Mostrando o resultado do terceiro vetor
print("\nResultado do terceiro vetor:")
print(vetor_resultado)

# Digite seu código aqui.
# Exemplo:
# a [89, 41, 64, 55, 93]
# b [68, 32, 79, 76, 38]
# c [89 - 38, 41 - 76, 64 - 79, 55 - 32, 93 - 68]
# c [51, -35, -15, 23, 25]

"""###21. Faça um programa que:

* preencha um vetor de cinco números e mostre a saída a seguir:
* imprima a seguinte saída, exemplo (cada número e o sinal de adição e depois o resultado da soma dos números) 8 + 2 + 1 + 3 + 0 = 14

Não use nenhuma função pronta da linguagem Python, a não ser len() e append().
"""

# Digite seu código aqui.
vetor = []

for i in range(5):
    numero = int(input(f"Informe o {i + 1}º número inteiro: "))
    vetor.append(numero)

soma = 0

print("Saída formatada:")
for i in range(len(vetor)):
    if i < len(vetor) - 1:
        print(f"{vetor[i]} + ", end="")
    else:
        print(f"{vetor[i]} ", end="")
    soma += vetor[i]

print(f"= {soma}")

"""### 22. Faça um programa que:
* leia um vetor com quinze posições para números inteiros.
* depois da leitura, em outro vetor, armazene a divisão de todos os  elementos pelo maior valor do vetor, para isso encontre o maior elemento
* Mostre o vetor após os cálculos.

Não use nenhuma função pronta da linguagem Python, a não ser len() e append().
"""

# Digite seu código aqui.
# Inicializando o vetor
vetor = []

# Preenchendo o vetor com quinze números inteiros
for i in range(15):
    numero = int(input(f"Informe o {i + 1}º número inteiro: "))
    vetor.append(numero)

# Encontrando o maior valor no vetor
maior_valor = vetor[0]
for elemento in vetor:
    if elemento > maior_valor:
        maior_valor = elemento

# Inicializando o vetor para armazenar as divisões
vetor_divisoes = []

# Calculando e armazenando as divisões pelo maior valor
for elemento in vetor:
    divisao = elemento / maior_valor
    vetor_divisoes.append(divisao)

# Mostrando o vetor após os cálculos das divisões
print("Vetor após as divisões pelo maior valor:")
print(vetor_divisoes)

"""### 23. Um vetor é palíndromo se ele não se alterar quando o mesmo for invertido. Escreva um programa que verifique se um vetor é palíndromo, fazendo comparação de índice/posição por índice/posição do vetor original (vo) com o vetor invertido (vi). Não use nenhuma função pronta da linguagem Python. A tamanho do vetor pode ser da sua escolha.
Exemplo:
vetor original    vo = {1, 3, 5, 2, 2, 5, 3, 1}  
vetor invertido é vi = {1, 3, 5, 2, 2, 5, 3, 1}
O vetor invertido **é palíndromo**, pois ele invertido é igual ao original

vetor original    vo = {9, 7, 5, 2, 4, 5, 3, 6}  
vetor invertido é vi = {6, 3, 5, 4, 2, 5, 7, 9}
O vetor invertido **não é palíndromo**, pois ele invertido é igual ao original


"""

# Digite seu código aqui.