# -*- coding: utf-8 -*-
"""Bryan Cliff - 232_P2_Alg_m.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DytuKLF79dMAl_6CEqW-HBxzucoQLY57

##**P2 - 2º. semestre/2023 -  Término: 11:00**
##HOJE EU NÃO VERIFICO A LÓGICA/PROGRAMAÇÃO, NEM ERROS DE CÓDIGO, POIS É UMA PROVA DE CONSULTA.
## É uma prova de consulta ao seu material, **apenas use os slides da disciplina de Algoritmo e as listas de exercícios do Colab da nossa aula**.
## **Apenas verificarei** o desenvolvimento dos exercícios de cada aluno, **EM OUTRO DIA**.

##Caso entregue atrasado não será aceita a prova. **O Classroom/Collab NÃO DEIXA ENTREGAR FORA DO PRAZO**.

##Depois de terminada a prova, você **NÃO PODE MAIS ALTERAR O ARQUIVO** DELA, essa ação fica registrada e assim a prova será anulada.

##**Não é permitido o acesso a qualquer outro site/aplicativo para o desenvolvimento da prova, ou seja, apenas poderão estar abertas e visíveis as guias (no navegador de internet) do Classroom e Colab.**
++++++++++++++++++++++++++++++++++++++++++++++++++++
##**P3** será dia **07/12**, no horário de aula.
##++++++++++++++++++++++++++++++++++++++++++++++++++++
#Não é permitido o uso do celular no dia da prova.

#CASO VERIFIQUE QUE O COLLAB TENHA ALGUM PROBLEMA, VÁ NO MENU, NA OPÇÃO DE AMBIENTE DE EXECUÇÃO, ESCOLHA A OPÇÃO REINICIAR AMBIENTE DE EXECUÇÃO, CLIQUE EM SIM E TENTE EXECUTAR NOVAMENTE O SEU PROGRAMA.
______________________________________________________

##**1.** [1,5 pontos - **Estrutura de repetição sem contador**] Desenvolva um programa utilizando a linguagem Python, que calcule e apresente a média de faturamentos de alguns meses de uma cooperativa. Não é informado a quantidade de meses, então use como critério de parada (condição da estrutura de repetição), digitar zero no valor do faturamento para sair.
"""

# Implemente aqui seu programa
total_faturamentos = 0
cont_elementos = 0
media_total = 0
print('Digite 0 no faturamento para sair')
salario = float(input('Digite um número para iniciar o programa: '))
while salario > 0:
    salario = float(input('Digite o faturamento do mês aqui: '))
    total_faturamentos = total_faturamentos + salario
    cont_elementos = cont_elementos + 1
    if salario > 0:
        media_total = (total_faturamentos / cont_elementos)

print(f'A média de faturamentos é {media_total:.2f}')

"""##**2.** [3,0 pontos - **Vetor**] Desenvolva um programa, utilizando a linguagem Python, que leia/armazene num vetor, o valor de faturamento bruto de 5 cooperativas.
##Sabe-se que as cooperativas possuem um desconto de 8% sobre o faturamento bruto, gerando assim, o faturamento líquido.
##Em um segundo vetor, calcule e armazene o faturamento líquido.
##Ao final apresente o vetor de faturamento líquido.

##Observação: Apenas podem ser utilizadas as funções append() e len()
"""

# Implemente aqui seu programa

faturamento_bruto = []
faturamento_liquido = []

for i in range(5):
    faturamento = float(input(f"Informe o faturamento bruto da cooperativa {i + 1}: "))
    faturamento_bruto.append(faturamento)

for i in range(len(faturamento_bruto)):
    desconto = 0.08 * faturamento_bruto[i]
    faturamento_liquido.append(faturamento_bruto[i] - desconto)

print("Vetor de Faturamento Líquido:")
print(faturamento_liquido)

"""##**3.**  [2,5 pontos - **Matriz**] Desenvolva um programa utilizando a linguagem Python, que leia uma matriz 3 x 2, que representa preços de produtos. Encontre e maior preço e apresente: o valor, a linha e a coluna em que ele esta armazenado na matriz.
##ObObservação: Apenas podem ser utilizadas as funções append() e len()
"""

# Implemente aqui seu programa
matriz_precos = []
for linha in range(3):
    vet_linha = []
    for coluna in range(2):
        preco = (float(input(f"Digite o preço do produto aqui: ")))
        vet_linha.append(preco)
    matriz_precos.append(vet_linha)


maior_preco = matriz_precos[0][0]
linha_maior_preco = coluna_maior_preco = 0

for linha in range(3):
    for coluna in range(2):
        if matriz_precos[linha][coluna] > maior_preco:
            maior_preco = matriz_precos[linha][coluna]
            linha_maior_preco = linha
            coluna_maior_preco = coluna

# Mostrando o resultado
print("Matriz de preços:")
for linha in matriz_precos:
    print(linha)

print(f"O maior preço é {maior_preco}, na linha {linha_maior_preco + 1}, coluna {coluna_maior_preco + 1}.")